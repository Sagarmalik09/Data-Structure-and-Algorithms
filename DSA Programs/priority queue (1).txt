#include<stdio.h>
#include<stdlib.h>
#define MAX 10
int size=-1;
struct priority_queue
{
    int info;
    int priority;

}pqueue[MAX];
int main()
{
    int choice,num,priority;
    while(1)
    {
        printf("\n1. Insertion of an element\n");
        printf("2. Deletion of an element\n");
        printf("3. Display of an element\n");
        printf("4. Position of highest priority element\n");
        printf("5. Exit\n");
        printf("enter the choice\n");
        scanf("%d",&choice);
        
        switch(choice)
        {
        case 1:
        printf("enter the number and priority of that number");
        scanf("%d",&num);
        scanf("%d",&priority);
        enqueue(num,priority);
        break;
        case 2:
        dequeue();
        break;
        case 3:
        display();
        break;
        case 4:
        printf("Position is %d",peek());
        break;
        case 5:
        exit(1);
        }
    }
    return 0;

}
void enqueue(int num,int p)
{
    int i;
    if(size==-1)
    {
      for(i=0;i<MAX;i++)
      {
        pqueue[i].info=-1;
        pqueue[i].priority=-1;
        }
    }
    if(iffull())
    {
        printf("priority queue full");
        return;
    }
    size++;
    pqueue[size].info=num;
    pqueue[size].priority=p;
    printf("element inserted successfully");
}

int iffull()
{
    if(size==MAX-1)
    {
     return 1;
    }
    return 0;
}

int peek()
{
    int index=-1,i,temp;
    if(size==-1)
    {
        printf("priority queue is empty");
        return -1;
    }
    temp=pqueue[0].priority;
    for(i=1;i<=size;i++)
    {
        if(temp<pqueue[i].priority)
       {
         temp=pqueue[i].priority;
         index=i;
       }
    }
    return index;
}

int dequeue()
{
  int index,i;
  if(size==-1)
  {
      printf("priority queue is empty");
      return -1;
  }
  index=peek();
  pqueue[index].info=-1;
  pqueue[index].priority=-1;
  for(i=index;i<size;i++)
  {
       pqueue[i].info=pqueue[i+1].info;
       pqueue[i].priority=pqueue[i+1].priority;
  }
  pqueue[i].info=-1;
  pqueue[i].priority=-1;
  size--;
  printf("element deleted successfully");
}
void display()
{
    int i;
    if(size==-1)
    {
        printf("priority queue is empty");
    }
    else
    {
        //int index=peek();
        for(i=0;i<=size;i++)
        {
            printf("Info=> %d and priority=> %d\n",pqueue[i].info,pqueue[i].priority);
        }
    }
}
