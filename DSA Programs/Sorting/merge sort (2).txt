#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#define MAX 100
void insert(int[],int);
void mergeSort(int[],int,int);  
void merge(int[],int,int,int);  
void display(int[],int);
int main()
{
    int size;
    printf("\nEnter the number of elements...");
    scanf("%d",&size);
    int arr[size];
    printf("\nEnter %d elements...",size);       
    insert(arr,size);  
    printf("\nElements of unsorted array are...\n");
    display(arr,size);
    mergeSort(arr,0,size-1);   
    printf("\nElements of sorted array are...\n");
    display(arr,size);
    return 0;
}
void insert(int arr[],int size)
{
    int i;
    for(i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }
}

void display(int arr[],int size)
{
    int i;
    for(i=0;i<size;i++)
    printf("\t%d",arr[i]);
}

 
void mergeSort(int arr[],int l,int r)
{
	if(l>=r)
	{
		return;
	}
	else
	{
	int m =l+ (r-l)/2;
	mergeSort(arr,l,m);
	mergeSort(arr,m+1,r);
	merge(arr,l,m,r);
	}
}
void merge(int arr[], int l, int m, int r)
{
	int n1 = m - l + 1;
	int n2 = r - m;
	int L[n1], R[n2];
	for (int i = 0; i < n1; i++)
		L[i] = arr[l + i];
	for (int j = 0; j < n2; j++)
		R[j] = arr[m + 1 + j];
	int i = 0;
	int j = 0;
	int k = l;

	while (i < n1 && j < n2)
	{
		if (L[i] <= R[j]) 
		{
			arr[k] = L[i];
			i++;
			k++;
		}
		else 
		{
			arr[k] = R[j];
			j++;
			k++;
		}
	}
	while (i < n1) 
	{
		arr[k] = L[i];
		i++;
		k++;
	}
	while (j < n2)
	{
		arr[k] = R[j];
		j++;
		k++;
	}
}
