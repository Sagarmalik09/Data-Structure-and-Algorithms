#include <stdio.h>
#include <stdlib.h>
#define MAX 10
struct node
{
   int data;
   struct node *next;
};
struct node *head[MAX]={NULL},*temp;
void insert()
{
    int i,key;
    printf("\nenter a value to insert into hash table\n");
    scanf("%d",&key);
    i=key%MAX;
    struct node * newnode=(struct node *)malloc(sizeof(struct node));
    newnode->data=key;
    newnode->next = NULL;
    if(head[i] == NULL)
        head[i] = newnode;
    else
    {
        temp=head[i];
        while(temp->next != NULL)
        {
           temp=temp->next;
        }
        temp->next=newnode;
    }
}
void search()
{
    int key,index;
    printf("\nenter the element to be searched\n");
    scanf("%d",&key);
    index=key%MAX;
    if(head[index] == NULL)
        printf("\n Search element not found\n");
    else
    {
        for(temp=head[index];temp!=NULL;temp=temp->next)
        {
            if(temp->data == key)
            {
                printf("search element found\n");
                break;
            }
        }
        if(temp==NULL)
            printf("\n Search element not found\n");
   
    }
}
void display()
{
    int i;
    for(i=0;i<MAX;i++)
          {
           printf("\nentries at index %d\n",i);
               if(head[i] == NULL)
               {
               printf("No Hash Entry");
               
               }
               else
               {
                  for(temp=head[i];temp!=NULL;temp=temp->next)
                  printf("%d->",temp->data);
               }
          }
         
}
int main()
{
    int choice;
    while(1)
    {
        printf("\n1.Insert..");
        printf("\n2.Display..");
        printf("\n3.Search..");
        printf("\n4.Exit..");
        printf("\nEnter your choice..");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
                insert();
                break;
            case 2:
                display();
                break;
            case 3:
                search();
                break;
            case 4:
                exit(0);
            default:
            printf("\nWrong Choice...");
        }
    }
}